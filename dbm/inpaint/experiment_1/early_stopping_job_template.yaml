!obj:pylearn2.scripts.train.Train {
    allow_overwrite: 0,
    dataset:  &train !obj:pylearn2.datasets.mnist.MNIST {
        which_set: "train",
        binarize: 1,
        one_hot: 1,
        start: 0,
        stop: 50000
    },
    model: !obj:galatea.dbm.inpaint.super_dbm.AugmentedDBM {
          # this pulls in batch size (which we override below) and niter from previous job
          super_dbm: !pkl: "${PYLEARN2_TRAIN_DIR}/stage_00_inpaint_best.pkl",
          extra_layer: !obj:galatea.dbm.inpaint.super_dbm.Softmax
                      {
                        irange: 0.,
                        n_classes: 10,
                        layer_name: 'class_layer',
                       }
    },
    algorithm: !obj:pylearn2.training_algorithms.bgd.BGD {
               batch_size: %(batch_size)d,
               set_batch_size: 1,
               updates_per_batch: %(updates_per_batch)d,
               reset_alpha: %(reset_alpha)d,
               hacky_conjugacy: %(hacky_conjugacy)d,
               reset_conjugate: %(reset_conjugate)d,
               monitoring_dataset: {
                                'train' : *train,
                                'valid' : !obj:pylearn2.datasets.mnist.MNIST {
                                        which_set: "train",
                                        binarize: 1,
                                        one_hot: 1,
                                        start: 50000,
                                        stop:  60000
                                        }
               },
               cost : !obj:galatea.dbm.inpaint.super_dbm.SuperDBM_ConditionalNLL {
               },
               termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased
               {
                        channel_name: "valid_err",
                        prop_decrease: .001,
                        N : 10
               }
        },
    callbacks: [
                !obj:pylearn2.training_callbacks.best_params.MonitorBasedSaveBest {
                        channel_name: "valid_err",
                        save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}_best.pkl"
                }
        ],
    save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl",
    save_freq : 1
}

