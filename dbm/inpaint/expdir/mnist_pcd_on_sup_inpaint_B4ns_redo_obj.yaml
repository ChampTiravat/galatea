!obj:pylearn2.scripts.train.Train {
    dataset: &data !obj:pylearn2.datasets.mnist.MNIST {
        which_set: "train",
        one_hot: 1,
        binarize: 1
    },
    model: !obj:pylearn2.monitor.push_monitor {
        model: !obj:galatea.dbm.inpaint.super_dbm.set_niter {
                super_dbm: !pkl: "${USERDIR}/galatea/dbm/inpaint/expdir/mnist_sup_inpaint_B4ns_redo_obj.pkl", 
                niter: 50
        },
        name: 'monitor_inpaint'
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
               batch_size: 100, 
               set_batch_size: 1,
               learning_rate: 1e-3,
               init_momentum: .5,
               monitoring_batches : 10,
               monitoring_dataset : { '10_train_batches' : *data },
               cost : #!obj:pylearn2.costs.cost.SumOfCosts {
                #costs: [
                !obj:galatea.dbm.inpaint.super_dbm.DBM_PCD {
                           supervised: 1,
                           num_chains: 100,
                           num_gibbs_steps: 5
                        },
                 #       !obj:galatea.dbm.inpaint.super_dbm.DBM_WeightDecay {
                  #        coeffs: [ .0005, .0005, .0005 ]
                   #     }
                    #   ]
          # }
        },
    callbacks: [
            !obj:pylearn2.training_algorithms.sgd.MomentumAdjustor {
                final_momentum: .9,
                start: 5,
                saturate: 6
            },
            !obj:pylearn2.training_algorithms.sgd.OneOverEpoch {
                start: 0,
                half_life: 10
            }
            #!obj:pylearn2.training_algorithms.sgd.PolyakAveraging {
            #    start: 100,
            #    save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}_polyak.pkl",
            #    save_freq: 1
            #}
    ],
    save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl",
    save_freq : 1
}

