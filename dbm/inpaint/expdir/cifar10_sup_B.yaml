# Supervised training without pretraining
!obj:pylearn2.scripts.train.Train {
    dataset:  !obj:galatea.datasets.zca_dataset.ZCA_Dataset {
        preprocessed_dataset: !pkl: "/data/lisa/data/cifar10/pylearn2_gcn_whitened/train.pkl",
        preprocessor: !pkl: "/data/lisa/data/cifar10/pylearn2_gcn_whitened/preprocessor.pkl",
        start: 0,
        stop: 40000
    },
    model: !obj:galatea.dbm.inpaint.super_dbm.AugmentedDBM {
        super_dbm: !obj:galatea.dbm.inpaint.super_dbm.ditch_mu {
                 # Note: this will pull in batch_size, and niter from the pre-existing model
          model: !obj:galatea.dbm.inpaint.super_dbm.SuperDBM {
              batch_size : 25, # 50 failed
              niter: 6, #note: since we have to backprop through the whole thing, this does
                         #increase the memory usage
              visible_layer: !obj:galatea.dbm.inpaint.super_dbm.GaussianConvolutionalVisLayer {
                rows: 32,
                cols: 32,
                channels: 3,
                init_beta: 3.7,
                init_mu: 0.
              },
              hidden_layers: [
                !obj:galatea.dbm.inpaint.super_dbm.ConvMaxPool {
                        border_mode : 'full',
                        output_channels: 64,
                        kernel_rows: 9,
                        kernel_cols: 9,
                        pool_rows: 2,
                        pool_cols: 2,
                        irange: 0.05,
                        layer_name: 'h0',
                        init_bias: -5.
               },
                !obj:galatea.dbm.inpaint.super_dbm.ConvMaxPool {
                        border_mode : 'full',
                        output_channels: 96,
                        kernel_rows: 5,
                        kernel_cols: 5,
                        pool_rows: 3,
                        pool_cols: 3,
                        irange: 0.3,
                        layer_name: 'h1',
                        init_bias: -4.5
               },
                !obj:galatea.dbm.inpaint.super_dbm.ConvMaxPool {
                        border_mode : 'full',
                        output_channels: 128,
                        kernel_rows: 3,
                        kernel_cols: 3,
                        pool_rows: 2,
                        pool_cols: 2,
                        irange: 0.3,
                        layer_name: 'h2',
                        init_bias: -4.
               }
              ]
          }
    },
                   extra_layer: !obj:galatea.dbm.inpaint.super_dbm.Softmax {
                        irange: 0.05,
                        n_classes: 10,
                        layer_name: 'class_layer',
                    }
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
               learning_rate: 1e-3,
               init_momentum: .5,
               batch_size: 25,
               set_batch_size: 1,
               monitoring_dataset :   !obj:galatea.datasets.zca_dataset.ZCA_Dataset {
        preprocessed_dataset: !pkl: "/data/lisa/data/cifar10/pylearn2_gcn_whitened/train.pkl",
        preprocessor: !pkl: "/data/lisa/data/cifar10/pylearn2_gcn_whitened/preprocessor.pkl",
        start: 40000,
        stop: 50000
    },
               cost : !obj:galatea.dbm.inpaint.super_dbm.SuperDBM_ConditionalNLL {
               },
        },
    callbacks: [ !obj:pylearn2.training_algorithms.sgd.MomentumAdjustor {
                        start: 0,
                        saturate: 10,
                        final_momentum: .9
                  }
                ],
    save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl",
    save_freq : 1
}

