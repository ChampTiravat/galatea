!obj:pylearn2.scripts.train.Train {
    dataset: &train !obj:pylearn2.datasets.mnist.MNIST {
        which_set: "train",
        one_hot: 1,
        shuffle: 1,
        binarize: 1,
        start: 0,
        stop: 50000
    },
    # this pulls in niter / batch_size
    model: !obj:galatea.dbm.inpaint.super_dbm.set_niter {
        super_dbm: !obj:pylearn2.monitor.push_monitor {
           model: !pkl: "/u/goodfeli/galatea/dbm/inpaint/expdir/mnist_stage_1O.pkl",
           name: 'inpainting_monitor'
        },
        niter: 50
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
               batch_size: &batch_size 100,
               set_batch_size: 1,
               learning_rate: 1e-3,
               init_momentum: .5,
               monitoring_batches : 10,
               monitoring_dataset : { 'train': *train,
                                      'valid': !obj:pylearn2.datasets.mnist.MNIST {
                                        which_set: "train",
                                        one_hot: 1,
                                        shuffle: 1,
                                        binarize: 1,
                                        start: 50000,
                                        stop: 60000
                                       }
                                    },
               cost : !obj:galatea.dbm.inpaint.super_dbm.DBM_PCD {
                    supervised: 1,
                    num_chains: 100,
                    num_gibbs_steps: 5
               },
        },
    callbacks: [ !obj:pylearn2.training_algorithms.sgd.MomentumAdjustor {
        final_momentum: .9,
        start: 0,
        saturate: 50
    },
      !obj:pylearn2.training_algorithms.sgd.PolyakAveraging {
        start: 50,
        save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}_polyak.pkl"
      }
    ],
    save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl",
    save_freq : 1
}

