!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.cifar10.CIFAR10 {
        which_set: 'train',
        gcn: 55.,
        one_hot: 1,
        start: 0,
        stop: 40000
    },
    model: !obj:pylearn2.monitor.push_monitor {
    model: !pkl: "cifar_conv_dropout_2A4.pkl",
    name: "monitor_first"
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate: .0078,
        init_momentum: .623694,
        monitoring_dataset:
            {
                #'train' : *train,
                'valid' : !obj:pylearn2.datasets.cifar10.CIFAR10 {
                              which_set: 'train',
                              gcn: 55.,
                              one_hot: 1,
                              start: 40000,
                              stop:  50000
                          },
                #'test'  : !obj:pylearn2.datasets.cifar10.CIFAR10 {
                #              which_set: 'test',
                #              gcn: 55.,
                #              one_hot: 1,
                #          }
            },
        cost: !obj:pylearn2.costs.cost.MethodCost {
                method: 'cost_from_X',
                supervised: 1
        },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_y_misclass",
            prop_decrease: 0.,
            N: 100
        },
        update_callbacks: !obj:pylearn2.training_algorithms.sgd.ExponentialDecay {
            decay_factor: 1.000004,
            min_lr: .000001
        }
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}_best.pkl"
        },
        !obj:pylearn2.training_algorithms.sgd.MomentumAdjustor {
            start: 1,
            saturate: 95,
            final_momentum: .7
        }
    ],
    save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl",
    save_freq: 1
}
