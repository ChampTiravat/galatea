!obj:pylearn2.train.Train {
    dataset: &train  !obj:pylearn2.datasets.tfd.TFD {
        which_set: 'full_train',
        one_hot: 1,
        fold: 4,
        axes: ['c', 0, 1, 'b'],
        preprocessor: !obj:pylearn2.datasets.preprocessing.GlobalContrastNormalization {} 
    },
    model: &model !obj:pylearn2.monitor.push_monitor {
        model: !pkl: "expdir/tfd4_conv_dropout_1A2B_best.pkl",
        name: "monitor_first"
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate: 0.0415969416499,
        init_momentum: 0.57991963625,
        monitoring_dataset:
            {
                'valid': !obj:pylearn2.datasets.tfd.TFD {
                    which_set: 'valid',
                    one_hot: 1,
                    fold: 4,
                    axes: ['c', 0, 1, 'b'],
                    preprocessor: !obj:pylearn2.datasets.preprocessing.GlobalContrastNormalization {} 
                },
                'test': !obj:pylearn2.datasets.tfd.TFD {
                    which_set: 'test',
                    one_hot: 1,
                    fold: 4,
                    axes: ['c', 0, 1, 'b'],
                    preprocessor: !obj:pylearn2.datasets.preprocessing.GlobalContrastNormalization {} 
                },
            },
        cost: &cost !obj:pylearn2.costs.cost.MethodCost {
                method: 'cost_from_X',
                supervised: 1
        },
        termination_criterion: !obj:pylearn2.termination_criteria.ChannelTarget {
            channel_name: "valid_y_nll",
            target: !obj:galatea.mlp.get_channel {
                batch_size: 100,
                cost: *cost,
                dataset: !obj:pylearn2.datasets.tfd.TFD {
                    which_set: 'train',
                    one_hot: 1,
                    fold: 4,
                    axes: ['c', 0, 1, 'b'],
                    preprocessor: !obj:pylearn2.datasets.preprocessing.GlobalContrastNormalization {} 
                },
                model: *model,
                channel: 'y_nll'
            },
        },
        update_callbacks: !obj:pylearn2.training_algorithms.sgd.ExponentialDecay {
            decay_factor: 1.00004,
            min_lr: .000001
        }
    },
    save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl",
    save_freq: 1
}
