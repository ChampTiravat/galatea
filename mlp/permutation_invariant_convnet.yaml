!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.mnist.MNIST {
        which_set: 'train',
        one_hot: 1,
        #start: 0,
        #stop: 50000
    },
    model: !obj:pylearn2.models.mlp.MLP {
        batch_size: 500,
        nvis: 784,
        layers: [
                 !obj:pylearn2.models.mlp.Linear {
                    softmax_columns: 1.,
                    layer_name: 'h0',
                    irange: 1.,
                    #max_col_norm: 1.,
                    dim: 784
                 },
                 !obj:pylearn2.models.mlp.SpaceConverter {
                    layer_name: 'h1',
                    output_space: !obj:pylearn2.space.Conv2DSpace {
                        shape: [28, 28],
                        num_channels: 1
                    }
                 },
                 !obj:pylearn2.models.mlp.ConvRectifiedLinear {
                     layer_name: 'h2',
                     output_channels: 64,
                     irange: .05,
                     kernel_shape: [5, 5],
                     pool_shape: [4, 4],
                     pool_stride: [2, 2],
                     max_kernel_norm: 1.9365
                 },
                 !obj:pylearn2.models.mlp.ConvRectifiedLinear {
                     layer_name: 'h3',
                     output_channels: 64,
                     irange: .05,
                     kernel_shape: [5, 5],
                     pool_shape: [4, 4],
                     pool_stride: [2, 2],
                     max_kernel_norm: 1.9365
                 },
                 !obj:pylearn2.models.mlp.Softmax {
                     max_col_norm: 1.9365,
                     layer_name: 'y',
                     n_classes: 10,
                     istdev: .05
                 }
                ],
    },
    algorithm: !obj:pylearn2.training_algorithms.bgd.BGD {
        conjugate: 1,
        reset_conjugate: 0,
        updates_per_batch: 3,
        monitoring_dataset:
            {
                'train' : *train,
                #'valid' : !obj:pylearn2.datasets.mnist.MNIST {
                #              which_set: 'train',
                #              one_hot: 1,
                #              start: 50000,
                #              stop:  60000
                #          },
                'test'  : !obj:pylearn2.datasets.mnist.MNIST {
                              which_set: 'test',
                              one_hot: 1,
                          }
            },
        cost: !obj:pylearn2.costs.cost.MethodCost {
                method: 'cost_from_X',
                supervised: 1
        },
        #termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
        #    channel_name: "valid_y_misclass",
        #    prop_decrease: 0.,
        #    N: 10
        #},
    },
    extensions: [
        #!obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
        #     channel_name: 'valid_y_misclass',
        #     save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}_best.pkl"
        #},
    ],
    save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl",
    save_freq: 1
}
