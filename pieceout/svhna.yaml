!obj:pylearn2.train.Train {
    dataset: &train !pkl: "/data/lisa/data/gray_svhn_2s_and_3s/splitted_train.pkl",
    model: !obj:pylearn2.models.mlp.MLP {
        layers: [
                 !obj:pylearn2.models.maxout.Maxout {
                     layer_name: 'h0',
                     num_units: 10,
                     num_pieces: 1,
                     irange: .025,
                     #max_col_norm: 1.9365,
                     min_zero: true
                 },
                 !obj:pylearn2.models.maxout.Maxout {
                     layer_name: 'h1',
                     num_units: 10,
                     num_pieces: 1,
                     irange: .5,
                     #max_col_norm: 1.9365,
                     min_zero: true
                 },
                 !obj:pylearn2.models.mlp.Sigmoid {
                     layer_name: 'y',
                     monitor_style: 'classification',
                     irange: .5,
                     dim: 1
                 }
                ],
        nvis: 1024,
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 100,
        learning_rate: .17,
        init_momentum: .6,
        monitoring_dataset:
            {
                'train' : *train,
                'valid': !pkl: "/data/lisa/data/gray_svhn_2s_and_3s/valid.pkl",
                'test': !pkl: "/data/lisa/data/gray_svhn_2s_and_3s/test.pkl"
            },
        cost: !obj:pylearn2.costs.mlp.dropout.Dropout {
            input_include_probs: { 'h0' : 1 },
            input_scales: { 'h0': 1. }
        },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_y_misclass",
            prop_decrease: 0.,
            N: 200
        },
        update_callbacks: !obj:pylearn2.training_algorithms.sgd.ExponentialDecay {
            decay_factor: 1.0001,
            min_lr: .000001
        }
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}_best.pkl"
        },
        !obj:pylearn2.training_algorithms.sgd.MomentumAdjustor {
            start: 1,
            saturate: 10,
            final_momentum: .7
        }
    ],
    save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl",
    save_freq: 1
}
