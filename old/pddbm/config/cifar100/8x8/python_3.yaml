#lie reboot_6 but with biases set to 0
!obj:pylearn2.scripts.train.Train {
        #save_path: "/kermit",
        save_path: "${EXPDIR2}/pddbm_cifar100_8x8/${PYLEARN2_TRAIN_FILE_STEM}.pkl",
        dataset: !pkl: &src "${CIFAR100_PATCHES_8x8}",
    model: !obj:galatea.pddbm.pddbm.PDDBM {
        bayes_B : False,
        exhaustive_iteration : True,
        init_momentum: 0.5,
        h_target : 0.1,
        h_penalty: 1.,
        g_targets : [ 0.1 ],
        g_penalties: [ 1. ],
        final_momentum: 0.9,
        momentum_saturation_example: 3e5,
        learning_rate : &lr .0005,
        init_non_s3c_lr : 0.,
        final_non_s3c_lr : *lr,
        non_s3c_lr_saturation_example : 2e6,
        monitor_ranges: 1,
        monitor_neg_chain_marginals: 1,
        h_bias_src : "s3c",
        dbm: !obj:pylearn2.models.dbm.DBM {
                negative_chains : 100,
                sampling_steps: 5,
                monitor_params: 1,
                rbms : [ !obj:pylearn2.models.rbm.RBM {
                                nvis: &num_h 1600,
                                nhid: 3200,
                                irange: .01,
                                init_bias_hid: 0.
                } ],
        },
        s3c: !obj:pylearn2.models.s3c.S3C {
               nvis : 192,
               nhid : *num_h,
               init_bias_hid : -1.,
               max_bias_hid : 1e6,
               min_bias_hid : -8.,
               "irange"  : .5,
               "constrain_W_norm" : 1,
               "init_B"  : 3.,
               "min_B"   : .1,
               "max_B"   : 1e6,
               "tied_B" :  1,
               "init_alpha" : 20.,
               "min_alpha" : 1e-3,
               "max_alpha" : 1e6,
               "init_mu" : .05,
               #"local_rf_src" : *src,
               #"local_rf_stride" : [ 1, 1],
               #"local_rf_shape" : [ 6, 6],
               #"random_patches_src" : *src,
               #"min_mu"  : 1.,
               #"max_mu"  : 1.,
               monitor_params : [ 'B', 'alpha', 'mu', 'W' ],
               "m_step"     : !obj:galatea.s3c.s3c.Grad_M_Step {
                        B_learning_rate_scale : .52, #100.0 / 192: match alpha, compensiate for tied weights
                        W_learning_rate_scale : 10.,
                        alpha_learning_rate_scale: 100.0,
                        B_penalty : 0.,
                        alpha_penalty : 0.
               },
        },
        inference_procedure : !obj:galatea.pddbm.pddbm.InferenceProcedure {
                #list_update_new_coeff : .3,
                monitor_kl_fail: 1,
                clip_reflections : 1,
                default_new_h_coeff : .7,
                default_new_s_coeff : .7,
                list_update_new_coeff : .05,
                rho : 1.,
        },
    },
    algorithm: !obj:pylearn2.training_algorithms.default.DefaultTrainingAlgorithm {
               batch_size : 100,
               "batches_per_iter" : 100,
               "monitoring_batches" : 1,
               "monitoring_dataset" :  !obj:pylearn2.datasets.dense_design_matrix.from_dataset {
                        dataset: *src,
                        num_examples: 100
               }
        },
    save_freq: 1
}

