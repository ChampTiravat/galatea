!obj:pylearn2.train.Train {
 dataset:  &train !obj:pylearn2.datasets.mnist.MNIST {
  which_set: "train",
  binarize: 1,
  one_hot: 1,
  start: 0,
  stop: 50000
 },
 model: !obj:galatea.sample_prop.agent.AgentHive1 {
  input_space: !obj:pylearn2.space.VectorSpace { dim: 784 },
  layers: [
    !obj:galatea.sample_prop.agent.LinearAgents {
        layer_name: 'h0',
        irange: .05,
        #max_col_norm: 10.,
        dim: 500
    },
    !obj:galatea.sample_prop.agent.LinearAgents {
        layer_name: 'h1',
        irange: .005,
        #max_col_norm: 10.,
        dim: 500
    },
    !obj:pylearn2.models.mlp.Softmax {
        layer_name: 'y',
        irange: 0.05,
        n_classes: 10,
        max_col_norm: 10
    }
        ]
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
               batch_size: 100,
               set_batch_size: 1,
               learning_rate: .005,
               init_momentum: .5,
               monitoring_dataset:
                                {
                                'train' : *train,
                                'valid' : !obj:pylearn2.datasets.mnist.MNIST {
                                        which_set: "train",
                                        binarize: 1,
                                        one_hot: 1,
                                        start: 50000,
                                        stop:  60000
                                        }
               },
               cost : !obj:galatea.sample_prop.agent.AgentHive1Cost1 {
                   flip_prob: .01,
               },
               termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased
               {
                        channel_name: "valid_y_misclass",
                        N: 100,
                        prop_decrease: 0.
               }
        },
    extensions: [
    !obj:pylearn2.training_algorithms.sgd.MomentumAdjustor {
        start: 0,
        saturate: 200,
        final_momentum: .9
    },
    #!obj:pylearn2.training_algorithms.sgd.LinearDecayOverEpoch {
    #    start: 1,
    #    saturate: 527,
    #    decay_factor: 0.006308
    #},
    !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
            channel_name: "valid_y_misclass",
            save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}_best.pkl"
    },
    ],
    save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl",
    save_freq : 1
}

