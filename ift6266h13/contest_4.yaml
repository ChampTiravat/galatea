!obj:pylearn2.train.Train {
    dataset: &train !obj:contest_dataset.ContestDataset {
        which_set: 'train',
        axes: ['c', 0, 1, 'b'],
        start: 0,
        stop: 3343,
        fit_preprocessor: 1,
        fit_test_preprocessor: 1,
        preprocessor: &preprocessor !obj:pylearn2.datasets.preprocessing.Standardize {} 
    },
    model: !obj:pylearn2.models.mlp.MLP {
        layers: [
                 !obj:pylearn2.models.maxout.MaxoutConvC01B {
                     layer_name: 'h0',
                     num_channels: 32,
                     num_pieces: 2,
                     kernel_shape: [5, 5],
                     pool_shape: [4, 4],
                     pool_stride: [2, 2],
                     irange: .005,
                     max_kernel_norm: 1.9365,
                 },
                 !obj:galatea.mlp.MaxPoolRectifiedLinear {
                     layer_name: 'h1',
                     detector_layer_dim: 1200,
                     pool_size: 5,
                     irange: .005,
                     max_col_norm: 1.9365,
                     #use_bias: 0
                 },
                 !obj:pylearn2.models.mlp.Softmax {
                     #max_col_norm: 3.873,
                     max_col_norm: 1.9365,
                     layer_name: 'y',
                     n_classes: 7,
                     irange: .005
                 }
                ],
        dropout_include_probs: [ .5, .5, 1 ],
        dropout_input_include_prob: .8,
        dropout_input_scale: 1.,
        input_space: !obj:pylearn2.space.Conv2DSpace {
            shape: [48, 48],
            channels: 1,
            axes: ['c', 0, 1, 'b']
        },
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 100,
        learning_rate: .01,
        init_momentum: .5,
        monitoring_dataset:
            {
                'train' : *train,
                'valid' : !obj:contest_dataset.ContestDataset {
                              which_set: 'train',
                              start: 3343,
                              stop:  4178,
                              preprocessor: *preprocessor,
                              axes: ['c', 0, 1, 'b']
                          },
            },
        cost: !obj:pylearn2.costs.cost.MethodCost {
                method: 'cost_from_X',
                supervised: 1
        },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_y_misclass",
            prop_decrease: 0.,
            N: 100
        },
        update_callbacks: !obj:pylearn2.training_algorithms.sgd.ExponentialDecay {
            decay_factor: 1.000004,
            min_lr: .000001
        }
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}_best.pkl"
        },
        !obj:pylearn2.training_algorithms.sgd.MomentumAdjustor {
            start: 1,
            saturate: 250,
            final_momentum: .7
        }
    ],
    save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl",
    save_freq: 1
}
