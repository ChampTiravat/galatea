#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Yoshua's randomized pooling idea
\end_layout

\begin_layout Standard
Say we have some criterion C(y(x,M)) where 
\begin_inset Formula $y_{i}(x,M)=\max_{j}x_{j}M_{ij}$
\end_inset

.
 
\begin_inset Formula $M$
\end_inset

 is fixed prior to each evaluation/gradient ascent step on 
\begin_inset Formula $C$
\end_inset

.
 
\begin_inset Formula $M$
\end_inset

 is generated by 
\begin_inset Formula $M_{ij}\sim\mathcal{B}(I_{ij})$
\end_inset

.
 The problem of learning to pool is then the problem of learning 
\begin_inset Formula $I$
\end_inset

.
 
\end_layout

\begin_layout Standard
We would like to compute
\begin_inset Formula 
\[
\frac{\partial}{\partial I_{ij}}\mathbb{E}[C(y,x,M)]=\frac{\partial}{\partial I_{ij}}\sum_{M}P(M)C(y,x,M)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=\sum_{M}C(y,x,M)\frac{\partial}{\partial I_{ij}}P(M)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=\sum_{M}C(y,x,M)\frac{\partial}{\partial I_{ij}}P(M)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=\sum_{M}C(y,x,M)\frac{\partial}{\partial I_{ij}}\Pi_{kl}I_{kl}^{M_{kl}}(1-I_{kl})^{(1-M_{kl})}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=\sum_{M}C(y,x,M)\frac{\partial}{\partial I_{ij}}\Pi_{kl}I_{kl}^{M_{kl}}(1-I_{kl})^{(1-M_{kl})}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=\sum_{M}C(y,x,M)\left(\Pi_{kl\neq ij}I_{kl}^{M_{kl}}(1-I_{kl})^{(1-M_{kl})}\right)\frac{I_{ij}^{M_{ij}-1}(M_{ij}-I_{ij})}{(1-I_{ij})^{M_{ij}}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=\sum_{M}C(y,x,M)\left(\Pi_{kl\neq ij}I_{kl}^{M_{kl}}(1-I_{kl})^{(1-M_{kl})}\right)(2M_{ij}-1)
\]

\end_inset


\end_layout

\begin_layout Standard
Now we would like to implement this with a sampling approximation.
 So we re-arrange the terms inside the summation to include a factor 
\begin_inset Formula $P(M)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=\sum_{M,P(M)>0}C(y,x,M)\frac{P(M)}{I_{ij}^{M_{ij}}(1-I_{ij})^{1-M_{ij}}}(2M_{ij}-1)
\]

\end_inset


\end_layout

\begin_layout Standard
where the restriction on the summation is introduced to avoid dividing by
 0.
\end_layout

\begin_layout Standard
Finally, we can replace this with samples of 
\begin_inset Formula $M$
\end_inset

 drawn from 
\begin_inset Formula $P(M)$
\end_inset

.
 The sampling procedure will guard us against dividing by 0 but we may rarely
 divide by 
\begin_inset Formula $\epsilon$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=\frac{1}{m}\sum_{k=1}^{m}C(y,x,\hat{M}^{(k)})\frac{2\hat{M}_{ij}^{(k)}-1}{I_{ij}^{\hat{M}_{ij}^{(k)}}(1-I_{ij})^{1-\hat{M}_{ij}^{(k)}}}
\]

\end_inset


\end_layout

\end_body
\end_document
